/*
 * This file is generated by jOOQ.
 */
package de.tichawa.cis.config.model.tables.records;


import de.tichawa.cis.config.model.tables.SensorChip;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SensorChipRecord extends UpdatableRecordImpl<SensorChipRecord> implements Record9<String, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>tivicc.sensor_chip.name</code>.
     */
    public void setName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>tivicc.sensor_chip.name</code>.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>tivicc.sensor_chip.family</code>.
     */
    public void setFamily(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>tivicc.sensor_chip.family</code>.
     */
    public Integer getFamily() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>tivicc.sensor_chip.dpi</code>.
     */
    public void setDpi(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>tivicc.sensor_chip.dpi</code>.
     */
    public Integer getDpi() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>tivicc.sensor_chip.dead_pixels</code>.
     */
    public void setDeadPixels(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>tivicc.sensor_chip.dead_pixels</code>.
     */
    public Integer getDeadPixels() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>tivicc.sensor_chip.pixel_per_sensor</code>.
     */
    public void setPixelPerSensor(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>tivicc.sensor_chip.pixel_per_sensor</code>.
     */
    public Integer getPixelPerSensor() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>tivicc.sensor_chip.clock_speed</code>.
     */
    public void setClockSpeed(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>tivicc.sensor_chip.clock_speed</code>.
     */
    public Integer getClockSpeed() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>tivicc.sensor_chip.timing</code>.
     */
    public void setTiming(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>tivicc.sensor_chip.timing</code>.
     */
    public Integer getTiming() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>tivicc.sensor_chip.binning</code>.
     */
    public void setBinning(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>tivicc.sensor_chip.binning</code>.
     */
    public Integer getBinning() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>tivicc.sensor_chip.light_en</code>.
     */
    public void setLightEn(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>tivicc.sensor_chip.light_en</code>.
     */
    public Integer getLightEn() {
        return (Integer) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<String, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return SensorChip.SENSOR_CHIP.NAME;
    }

    @Override
    public Field<Integer> field2() {
        return SensorChip.SENSOR_CHIP.FAMILY;
    }

    @Override
    public Field<Integer> field3() {
        return SensorChip.SENSOR_CHIP.DPI;
    }

    @Override
    public Field<Integer> field4() {
        return SensorChip.SENSOR_CHIP.DEAD_PIXELS;
    }

    @Override
    public Field<Integer> field5() {
        return SensorChip.SENSOR_CHIP.PIXEL_PER_SENSOR;
    }

    @Override
    public Field<Integer> field6() {
        return SensorChip.SENSOR_CHIP.CLOCK_SPEED;
    }

    @Override
    public Field<Integer> field7() {
        return SensorChip.SENSOR_CHIP.TIMING;
    }

    @Override
    public Field<Integer> field8() {
        return SensorChip.SENSOR_CHIP.BINNING;
    }

    @Override
    public Field<Integer> field9() {
        return SensorChip.SENSOR_CHIP.LIGHT_EN;
    }

    @Override
    public String component1() {
        return getName();
    }

    @Override
    public Integer component2() {
        return getFamily();
    }

    @Override
    public Integer component3() {
        return getDpi();
    }

    @Override
    public Integer component4() {
        return getDeadPixels();
    }

    @Override
    public Integer component5() {
        return getPixelPerSensor();
    }

    @Override
    public Integer component6() {
        return getClockSpeed();
    }

    @Override
    public Integer component7() {
        return getTiming();
    }

    @Override
    public Integer component8() {
        return getBinning();
    }

    @Override
    public Integer component9() {
        return getLightEn();
    }

    @Override
    public String value1() {
        return getName();
    }

    @Override
    public Integer value2() {
        return getFamily();
    }

    @Override
    public Integer value3() {
        return getDpi();
    }

    @Override
    public Integer value4() {
        return getDeadPixels();
    }

    @Override
    public Integer value5() {
        return getPixelPerSensor();
    }

    @Override
    public Integer value6() {
        return getClockSpeed();
    }

    @Override
    public Integer value7() {
        return getTiming();
    }

    @Override
    public Integer value8() {
        return getBinning();
    }

    @Override
    public Integer value9() {
        return getLightEn();
    }

    @Override
    public SensorChipRecord value1(String value) {
        setName(value);
        return this;
    }

    @Override
    public SensorChipRecord value2(Integer value) {
        setFamily(value);
        return this;
    }

    @Override
    public SensorChipRecord value3(Integer value) {
        setDpi(value);
        return this;
    }

    @Override
    public SensorChipRecord value4(Integer value) {
        setDeadPixels(value);
        return this;
    }

    @Override
    public SensorChipRecord value5(Integer value) {
        setPixelPerSensor(value);
        return this;
    }

    @Override
    public SensorChipRecord value6(Integer value) {
        setClockSpeed(value);
        return this;
    }

    @Override
    public SensorChipRecord value7(Integer value) {
        setTiming(value);
        return this;
    }

    @Override
    public SensorChipRecord value8(Integer value) {
        setBinning(value);
        return this;
    }

    @Override
    public SensorChipRecord value9(Integer value) {
        setLightEn(value);
        return this;
    }

    @Override
    public SensorChipRecord values(String value1, Integer value2, Integer value3, Integer value4, Integer value5, Integer value6, Integer value7, Integer value8, Integer value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SensorChipRecord
     */
    public SensorChipRecord() {
        super(SensorChip.SENSOR_CHIP);
    }

    /**
     * Create a detached, initialised SensorChipRecord
     */
    public SensorChipRecord(String name, Integer family, Integer dpi, Integer deadPixels, Integer pixelPerSensor, Integer clockSpeed, Integer timing, Integer binning, Integer lightEn) {
        super(SensorChip.SENSOR_CHIP);

        setName(name);
        setFamily(family);
        setDpi(dpi);
        setDeadPixels(deadPixels);
        setPixelPerSensor(pixelPerSensor);
        setClockSpeed(clockSpeed);
        setTiming(timing);
        setBinning(binning);
        setLightEn(lightEn);
    }
}
