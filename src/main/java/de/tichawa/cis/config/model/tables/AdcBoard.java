/*
 * This file is generated by jOOQ.
 */
package de.tichawa.cis.config.model.tables;


import de.tichawa.cis.config.model.Keys;
import de.tichawa.cis.config.model.Tivicc;
import de.tichawa.cis.config.model.tables.records.AdcBoardRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdcBoard extends TableImpl<AdcBoardRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>tivicc.adc_board</code>
     */
    public static final AdcBoard ADC_BOARD = new AdcBoard();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AdcBoardRecord> getRecordType() {
        return AdcBoardRecord.class;
    }

    /**
     * The column <code>tivicc.adc_board.name</code>.
     */
    public final TableField<AdcBoardRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>tivicc.adc_board.adcs</code>.
     */
    public final TableField<AdcBoardRecord, Integer> ADCS = createField(DSL.name("adcs"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>tivicc.adc_board.channels</code>.
     */
    public final TableField<AdcBoardRecord, Integer> CHANNELS = createField(DSL.name("channels"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>tivicc.adc_board.clock_speed</code>.
     */
    public final TableField<AdcBoardRecord, Integer> CLOCK_SPEED = createField(DSL.name("clock_speed"), SQLDataType.INTEGER.nullable(false), this, "");

    private AdcBoard(Name alias, Table<AdcBoardRecord> aliased) {
        this(alias, aliased, null);
    }

    private AdcBoard(Name alias, Table<AdcBoardRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>tivicc.adc_board</code> table reference
     */
    public AdcBoard(String alias) {
        this(DSL.name(alias), ADC_BOARD);
    }

    /**
     * Create an aliased <code>tivicc.adc_board</code> table reference
     */
    public AdcBoard(Name alias) {
        this(alias, ADC_BOARD);
    }

    /**
     * Create a <code>tivicc.adc_board</code> table reference
     */
    public AdcBoard() {
        this(DSL.name("adc_board"), null);
    }

    public <O extends Record> AdcBoard(Table<O> child, ForeignKey<O, AdcBoardRecord> key) {
        super(child, key, ADC_BOARD);
    }

    @Override
    public Schema getSchema() {
        return Tivicc.TIVICC;
    }

    @Override
    public UniqueKey<AdcBoardRecord> getPrimaryKey() {
        return Keys.KEY_ADC_BOARD_PRIMARY;
    }

    @Override
    public List<UniqueKey<AdcBoardRecord>> getKeys() {
        return Arrays.<UniqueKey<AdcBoardRecord>>asList(Keys.KEY_ADC_BOARD_PRIMARY);
    }

    @Override
    public AdcBoard as(String alias) {
        return new AdcBoard(DSL.name(alias), this);
    }

    @Override
    public AdcBoard as(Name alias) {
        return new AdcBoard(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AdcBoard rename(String name) {
        return new AdcBoard(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AdcBoard rename(Name name) {
        return new AdcBoard(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, Integer, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
