/*
 * This file is generated by jOOQ.
 */
package de.tichawa.cis.config.model.tables.records;


import de.tichawa.cis.config.model.tables.Electronic;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ElectronicRecord extends TableRecordImpl<ElectronicRecord> implements Record6<String, Integer, String, Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>electronic.cis_type</code>.
     */
    public void setCisType(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>electronic.cis_type</code>.
     */
    public String getCisType() {
        return (String) get(0);
    }

    /**
     * Setter for <code>electronic.cis_length</code>.
     */
    public void setCisLength(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>electronic.cis_length</code>.
     */
    public Integer getCisLength() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>electronic.select_code</code>.
     */
    public void setSelectCode(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>electronic.select_code</code>.
     */
    public String getSelectCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>electronic.art_no</code>.
     */
    public void setArtNo(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>electronic.art_no</code>.
     */
    public Integer getArtNo() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>electronic.multiplier</code>.
     */
    public void setMultiplier(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>electronic.multiplier</code>.
     */
    public String getMultiplier() {
        return (String) get(4);
    }

    /**
     * Setter for <code>electronic.amount</code>.
     */
    public void setAmount(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>electronic.amount</code>.
     */
    public String getAmount() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, Integer, String, Integer, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, Integer, String, Integer, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Electronic.ELECTRONIC.CIS_TYPE;
    }

    @Override
    public Field<Integer> field2() {
        return Electronic.ELECTRONIC.CIS_LENGTH;
    }

    @Override
    public Field<String> field3() {
        return Electronic.ELECTRONIC.SELECT_CODE;
    }

    @Override
    public Field<Integer> field4() {
        return Electronic.ELECTRONIC.ART_NO;
    }

    @Override
    public Field<String> field5() {
        return Electronic.ELECTRONIC.MULTIPLIER;
    }

    @Override
    public Field<String> field6() {
        return Electronic.ELECTRONIC.AMOUNT;
    }

    @Override
    public String component1() {
        return getCisType();
    }

    @Override
    public Integer component2() {
        return getCisLength();
    }

    @Override
    public String component3() {
        return getSelectCode();
    }

    @Override
    public Integer component4() {
        return getArtNo();
    }

    @Override
    public String component5() {
        return getMultiplier();
    }

    @Override
    public String component6() {
        return getAmount();
    }

    @Override
    public String value1() {
        return getCisType();
    }

    @Override
    public Integer value2() {
        return getCisLength();
    }

    @Override
    public String value3() {
        return getSelectCode();
    }

    @Override
    public Integer value4() {
        return getArtNo();
    }

    @Override
    public String value5() {
        return getMultiplier();
    }

    @Override
    public String value6() {
        return getAmount();
    }

    @Override
    public ElectronicRecord value1(String value) {
        setCisType(value);
        return this;
    }

    @Override
    public ElectronicRecord value2(Integer value) {
        setCisLength(value);
        return this;
    }

    @Override
    public ElectronicRecord value3(String value) {
        setSelectCode(value);
        return this;
    }

    @Override
    public ElectronicRecord value4(Integer value) {
        setArtNo(value);
        return this;
    }

    @Override
    public ElectronicRecord value5(String value) {
        setMultiplier(value);
        return this;
    }

    @Override
    public ElectronicRecord value6(String value) {
        setAmount(value);
        return this;
    }

    @Override
    public ElectronicRecord values(String value1, Integer value2, String value3, Integer value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ElectronicRecord
     */
    public ElectronicRecord() {
        super(Electronic.ELECTRONIC);
    }

    /**
     * Create a detached, initialised ElectronicRecord
     */
    public ElectronicRecord(String cisType, Integer cisLength, String selectCode, Integer artNo, String multiplier, String amount) {
        super(Electronic.ELECTRONIC);

        setCisType(cisType);
        setCisLength(cisLength);
        setSelectCode(selectCode);
        setArtNo(artNo);
        setMultiplier(multiplier);
        setAmount(amount);
    }
}
