/*
 * This file is generated by jOOQ.
 */
package de.tichawa.cis.config.model.tables.records;


import de.tichawa.cis.config.model.tables.Price;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PriceRecord extends UpdatableRecordImpl<PriceRecord> implements Record8<Integer, String, Object, Double, Double, Double, Double, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>price.art_no</code>.
     */
    public void setArtNo(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>price.art_no</code>.
     */
    public Integer getArtNo() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>price.ferix_key</code>.
     */
    public void setFerixKey(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>price.ferix_key</code>.
     */
    public String getFerixKey() {
        return (String) get(1);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public void setDisplayName(Object value) {
        set(2, value);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public Object getDisplayName() {
        return get(2);
    }

    /**
     * Setter for <code>price.price</code>.
     */
    public void setPrice(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>price.price</code>.
     */
    public Double getPrice() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>price.assembly_time</code>.
     */
    public void setAssemblyTime(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>price.assembly_time</code>.
     */
    public Double getAssemblyTime() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>price.power_consumption</code>.
     */
    public void setPowerConsumption(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>price.power_consumption</code>.
     */
    public Double getPowerConsumption() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>price.weight</code>.
     */
    public void setWeight(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>price.weight</code>.
     */
    public Double getWeight() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>price.photo_value</code>.
     */
    public void setPhotoValue(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>price.photo_value</code>.
     */
    public Double getPhotoValue() {
        return (Double) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, Object, Double, Double, Double, Double, Double> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, Object, Double, Double, Double, Double, Double> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Price.PRICE.ART_NO;
    }

    @Override
    public Field<String> field2() {
        return Price.PRICE.FERIX_KEY;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    @Override
    public Field<Object> field3() {
        return Price.PRICE.DISPLAY_NAME;
    }

    @Override
    public Field<Double> field4() {
        return Price.PRICE.PRICE_;
    }

    @Override
    public Field<Double> field5() {
        return Price.PRICE.ASSEMBLY_TIME;
    }

    @Override
    public Field<Double> field6() {
        return Price.PRICE.POWER_CONSUMPTION;
    }

    @Override
    public Field<Double> field7() {
        return Price.PRICE.WEIGHT;
    }

    @Override
    public Field<Double> field8() {
        return Price.PRICE.PHOTO_VALUE;
    }

    @Override
    public Integer component1() {
        return getArtNo();
    }

    @Override
    public String component2() {
        return getFerixKey();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    @Override
    public Object component3() {
        return getDisplayName();
    }

    @Override
    public Double component4() {
        return getPrice();
    }

    @Override
    public Double component5() {
        return getAssemblyTime();
    }

    @Override
    public Double component6() {
        return getPowerConsumption();
    }

    @Override
    public Double component7() {
        return getWeight();
    }

    @Override
    public Double component8() {
        return getPhotoValue();
    }

    @Override
    public Integer value1() {
        return getArtNo();
    }

    @Override
    public String value2() {
        return getFerixKey();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    @Override
    public Object value3() {
        return getDisplayName();
    }

    @Override
    public Double value4() {
        return getPrice();
    }

    @Override
    public Double value5() {
        return getAssemblyTime();
    }

    @Override
    public Double value6() {
        return getPowerConsumption();
    }

    @Override
    public Double value7() {
        return getWeight();
    }

    @Override
    public Double value8() {
        return getPhotoValue();
    }

    @Override
    public PriceRecord value1(Integer value) {
        setArtNo(value);
        return this;
    }

    @Override
    public PriceRecord value2(String value) {
        setFerixKey(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    @Override
    public PriceRecord value3(Object value) {
        setDisplayName(value);
        return this;
    }

    @Override
    public PriceRecord value4(Double value) {
        setPrice(value);
        return this;
    }

    @Override
    public PriceRecord value5(Double value) {
        setAssemblyTime(value);
        return this;
    }

    @Override
    public PriceRecord value6(Double value) {
        setPowerConsumption(value);
        return this;
    }

    @Override
    public PriceRecord value7(Double value) {
        setWeight(value);
        return this;
    }

    @Override
    public PriceRecord value8(Double value) {
        setPhotoValue(value);
        return this;
    }

    @Override
    public PriceRecord values(Integer value1, String value2, Object value3, Double value4, Double value5, Double value6, Double value7, Double value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PriceRecord
     */
    public PriceRecord() {
        super(Price.PRICE);
    }

    /**
     * Create a detached, initialised PriceRecord
     */
    public PriceRecord(Integer artNo, String ferixKey, Object displayName, Double price, Double assemblyTime, Double powerConsumption, Double weight, Double photoValue) {
        super(Price.PRICE);

        setArtNo(artNo);
        setFerixKey(ferixKey);
        setDisplayName(displayName);
        setPrice(price);
        setAssemblyTime(assemblyTime);
        setPowerConsumption(powerConsumption);
        setWeight(weight);
        setPhotoValue(photoValue);
    }
}
